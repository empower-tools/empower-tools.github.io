{"remainingRequest":"/home/dinan/IdeaProjects/empower/node_modules/babel-loader/lib/index.js??ref--11-1!/home/dinan/IdeaProjects/empower/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/home/dinan/IdeaProjects/empower/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/home/dinan/IdeaProjects/empower/docs/hammer-drill-warnings.md","dependencies":[{"path":"/home/dinan/IdeaProjects/empower/docs/hammer-drill-warnings.md","mtime":1610939605058},{"path":"/home/dinan/IdeaProjects/empower/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-hammer-drill-warnings-md-e2c.json","mtime":1610940123273},{"path":"/home/dinan/IdeaProjects/empower/node_modules/cache-loader/dist/cjs.js","mtime":1609642444776},{"path":"/home/dinan/IdeaProjects/empower/node_modules/babel-loader/lib/index.js","mtime":1609642444680},{"path":"/home/dinan/IdeaProjects/empower/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1609642457710},{"path":"/home/dinan/IdeaProjects/empower/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1609642456821}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}